# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.configure("2") do |config|
  config.vm.box = "generic/centos8s"
  config.vm.provider "virtualbox" do |vb|
    vb.memory = 512
    vb.cpus   = 1
  end
      
  config.vm.define "slave1" do |slave1|
    slave1.vm.network "private_network", ip: "192.168.56.21"
    #slave1.vm.network "forwarded_port", guest: 80, host: 8080
	  slave1.vm.hostname = "slave1.puppet"
  end

  config.vm.define "slave2" do |slave2|
    slave2.vm.network "private_network", ip: "192.168.56.22"
    #slave2.vm.network "forwarded_port", guest: 80, host: 8081
    slave2.vm.hostname = "slave2.puppet"
  end

  config.vm.define "mineserver" do |mineserver|
    mineserver.vm.network "forwarded_port", guest: 25565, host: 8082
    mineserver.vm.network "private_network", ip: "192.168.56.23"
    mineserver.vm.hostname = "mineserver.puppet"
    mineserver.vm.provider("virtualbox") { |vb| vb.memory = 2048 }
	end 
 
  config.vm.define "master" do |master|
    master.vm.synced_folder ".", "/vagrant"
    master.vm.network "private_network", ip: "192.168.56.11"
    master.vm.network "forwarded_port", guest: 80, host: 8080
    master.vm.network "forwarded_port", guest: 81, host: 8081
    master.vm.hostname = "master.puppet"
    master.vm.provider("virtualbox") { |vb| vb.memory = 2048 }
    master.vm.provision :file, source: '.vagrant/machines/slave1/virtualbox/private_key', destination: '/home/vagrant/private_key_slave1'
    master.vm.provision :file, source: '.vagrant/machines/slave2/virtualbox/private_key', destination: '/home/vagrant/private_key_slave2'
    master.vm.provision :file, source: '.vagrant/machines/mineserver/virtualbox/private_key', destination: '/home/vagrant/private_key_mineserver'
    master.vm.provision "shell", inline: <<-SHELL
      sudo chmod =600 /home/vagrant/private_key_slave1
      sudo chmod =600 /home/vagrant/private_key_slave2
      sudo chmod =600 /home/vagrant/private_key_mineserver
      SHELL
  
    master.vm.provision "ansible_local" do |ansible|
      ansible.playbook = "master.yaml"
      ansible.become = true
	    ansible.inventory_path = "inventory"
	    ansible.limit = "all"
    end
  end	 
end