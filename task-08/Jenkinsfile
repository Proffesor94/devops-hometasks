pipeline {
    agent any
    tools{
        go 'Go 1.16'
    }
    
    stages {
        stage("git pull"){
            steps{
                git 'https://github.com/Fenikks/word-cloud-generator.git'
            }
        }
        stage("Build Project"){
            steps{
                sh '''
                export GOPATH=$WORKSPACE/go
                export PATH="$PATH:$(go env GOPATH)/bin"
                go get github.com/tools/godep
                go get github.com/smartystreets/goconvey
                go get github.com/GeertJohan/go.rice/rice
                go get github.com/wickett/word-cloud-generator/wordyapi
                go get github.com/gorilla/mux '''
            }
        }
        stage ("tests"){
            steps{
            sh '''
            make lint
            make test '''
            }
        }
        stage ("Archivate build and upload to Nexus"){
            steps{
                sh '''
                sed -i "s/1.DEVELOPMENT/1.$BUILD_NUMBER/g" static/version
                GOOS=linux GOARCH=amd64 go build -o ./artifacts/word-cloud-generator -v
                gzip -f ./artifacts/word-cloud-generator
                
                 '''
                
                nexusArtifactUploader ( 
                    artifacts: [
                        [artifactId: 'word-cloud-generator',
                        classifier: '',
                        file: './artifacts/word-cloud-generator.gz',
                        type: 'gz']
                    ], 
                    credentialsId: 'nexus-creds', 
                    groupId: "$git_branch", 
                    nexusUrl: '192.168.33.90:8081', 
                    nexusVersion: 'nexus3', 
                    protocol: 'http', 
                    repository: 'word-cloud-build', 
                    version: '1.$BUILD_NUMBER'
                )
            }
        }
        stage ("App Install on staging and integration tests"){
            parallel {
                stage("Install on staging and testing app"){
                    steps{
                        
                        sh '''
                        sshpass -p vagrant ssh vagrant@192.168.33.80 sudo service wordcloud stop
                        sshpass -p vagrant ssh vagrant@192.168.33.80 sudo curl -X GET "http://192.168.33.90:8081/repository/word-cloud-build/$git_branch/word-cloud-generator/1.$BUILD_NUMBER/word-cloud-generator-1.$BUILD_NUMBER.gz" -o /opt/wordcloud/word-cloud-generator.gz
                        sshpass -p vagrant ssh vagrant@192.168.33.80 sudo ls -l /opt/wordcloud
                        sshpass -p vagrant ssh vagrant@192.168.33.80 sudo gunzip -f /opt/wordcloud/word-cloud-generator.gz
                        sshpass -p vagrant ssh vagrant@192.168.33.80 sudo chmod +x /opt/wordcloud/word-cloud-generator
                        sshpass -p vagrant ssh vagrant@192.168.33.80 sudo service wordcloud start
                        res=`curl -s -H "Content-Type: application/json" -d '{"text":"ths is a really really really important thing this is"}' http://192.168.33.80:8888/version | jq '. | length'`
                        if [ "1" != "$res" ]; then
                        exit 99
                        fi
                        res=`curl -s -H "Content-Type: application/json" -d '{"text":"ths is a really really really important thing this is"}' http://192.168.33.80:8888/api | jq '. | length'`
                        if [ "7" != "$res" ]; then
                        exit 99
                        fi
                        '''
                    } 
                }
                stage("parallel tests"){
                    steps{
                        sh '''
                        res=`curl -s -H "Content-Type: application/json" -d '{"text":"ths is a really really really important thing this is"}' http://192.168.33.80:8888/version | jq '. | length'`
                        if [ "1" != "$res" ]; then
                        exit 99
                        fi
                        res=`curl -s -H "Content-Type: application/json" -d '{"text":"ths is a really really really important thing this is"}' http://192.168.33.80:8888/api | jq '. | length'`
                        if [ "7" != "$res" ]; then
                        exit 99
                        fi    
                        '''
                    }    
                }   
            }
        }
        stage("install app on production server"){
            steps{
            sh '''
            sshpass -p vagrant ssh -o StrictHostKeyChecking=no  vagrant@192.168.33.85 sudo service wordcloud stop
            sshpass -p vagrant ssh -o StrictHostKeyChecking=no  vagrant@192.168.33.85 sudo curl -X GET "http://192.168.33.90:8081/repository/word-cloud-build/$git_branch/word-cloud-generator/1.$BUILD_NUMBER/word-cloud-generator-1.$BUILD_NUMBER.gz" -o /opt/wordcloud/word-cloud-generator.gz
            sshpass -p vagrant ssh -o StrictHostKeyChecking=no  vagrant@192.168.33.85 sudo gunzip -f /opt/wordcloud/word-cloud-generator.gz
            sshpass -p vagrant ssh -o StrictHostKeyChecking=no  vagrant@192.168.33.85 sudo chmod +x /opt/wordcloud/word-cloud-generator
            sshpass -p vagrant ssh -o StrictHostKeyChecking=no  vagrant@192.168.33.85 sudo service wordcloud start
            '''
            }
        }
    }   
}