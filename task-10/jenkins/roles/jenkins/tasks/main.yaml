- name: required pckgs install
  apt:
   pkg:
    - curl
    - apt-transport-https
    - gnupg
    - git
    - build-essential
    - default-jre
    - python3-pip
    - python-pip-whl
   state: latest
   update_cache: yes

- name: install python-jenkins with pip
  pip:
   name:
   - python-jenkins
   - lxml

- name: Add Jenkins apt repository key
  apt_key:
   url: https://pkg.jenkins.io/debian-stable/jenkins.io.key
   state: present

- name: Add Jenkins apt repository
  apt_repository:
   repo: deb https://pkg.jenkins.io/debian-stable binary/
   #state: present
   update_cache: true
   
- name: Install Jenkins
  apt:
   pkg:
   - jenkins
   state: latest
   
- name: stop Jenkins
  become: yes
  service:
    name: jenkins
    state: stopped


- name: Copy multiple files to multiple directories
  copy: src={{ item.0 }} dest={{ item.1 }}
  with_together:
    - [ '/root/roles/jenkins/files/users/', 'org.jenkinsci.plugins.golang.GolangBuildWrapper.xml', '/root/roles/jenkins/files/credentials.xml', '/root/roles/jenkins/files/locale.xml' ]
    - [ '/var/lib/jenkins/users/', '/var/lib/jenkins/org.jenkinsci.plugins.golang.GolangBuildWrapper.xml', '/var/lib/jenkins/credentials.xml', '/var/lib/jenkins/locale.xml' ]


- name: Disable start wizard
  lineinfile:
    path: "{{ item.path }}"
    state: present
    regexp: "{{ item.exp }}"
    line: "{{ item.n_ln }}"
  with_items:
    - { path: "/etc/default/jenkins", exp: '^JAVA_ARGS="-Djava.awt.headless=true"', n_ln: 'JAVA_ARGS="-Djava.awt.headless=true -Djenkins.install.runSetupWizard=false -Dhudson.security.csrf.DefaultCrumbIssuer.EXCLUDE_SESSION_ID=true"' }

- name: start Jenkins
  become: yes
  sysvinit:
    name: jenkins
    state: started
  
- name: pause for start jenkins app
  shell: 'sleep 30'
  
 #Install plugins
- include_tasks: plugins.yaml

 #Build the project
- include_tasks: build.yaml
  



