- name: required pckgs install
  apt:
   pkg:
    - daemon
    - git
    - build-essential 
    - python-pip-whl
    - python3-pip
    - openjdk-11-jdk
    - gnupg2
   state: latest
   update_cache: yes

- name: install python-jenkins with pip
  pip:
   name:
   - python-jenkins
   - lxml

- name: Add Jenkins apt repository key
  apt_key:
   url: https://pkg.jenkins.io/debian-stable/jenkins.io.key
   state: present

- name: Add Jenkins apt repository
  apt_repository:
   repo: deb https://pkg.jenkins.io/debian-stable binary/
   update_cache: true
   
- name: Install Jenkins
  apt:
   pkg:
   - jenkins
   state: present

- name: Create dirs
  file:
    path: "{{ item }}"
    state: directory
    owner: jenkins
    group: jenkins
  with_items:
    - /var/lib/jenkins/users/admin_11540685520045940567
    - /var/lib/jenkins/jobs/gopipeline

- name: Copy config files
  copy:
    src: "{{ item.src }}"
    dest: "{{ item.dst }}"
    owner: jenkins
    group: jenkins
    force: yes
  with_items:
    - { src: "/root/roles/jenkins/files/users/users.xml", dst: "/var/lib/jenkins/users/" }
    - { src: "/root/roles/jenkins/files/users/admin_11540685520045940567/config.xml", dst: "/var/lib/jenkins/users/admin_11540685520045940567/" }
    - { src: "/root/roles/jenkins/files/config.xml", dst: "/var/lib/jenkins/" }
    - { src: "/root/roles/jenkins/files/locale.xml", dst: "/var/lib/jenkins/" }
    - { src: "/root/roles/jenkins/files/credentials.xml", dst: "/var/lib/jenkins/" }
    - { src: "/root/roles/jenkins/files/org.jenkinsci.plugins.golang.GolangBuildWrapper.xml", dst: "/var/lib/jenkins/" }
    - { src: "/root/roles/jenkins/files/jobs/gopipeline/config.xml", dst: "/var/lib/jenkins/jobs/gopipeline/" }

- name: Disable start wizard
  lineinfile:
    path: "{{ item.path }}"
    state: present
    regexp: "{{ item.exp }}"
    line: "{{ item.n_ln }}"
  with_items:
    - { path: "/etc/default/jenkins", exp: '^JAVA_ARGS="-Djava.awt.headless=true"', n_ln: 'JAVA_ARGS="-Djava.awt.headless=true -Djenkins.install.runSetupWizard=false -Dhudson.security.csrf.DefaultCrumbIssuer.EXCLUDE_SESSION_ID=true"' }

- name: start Jenkins
  become: true
  sysvinit:
    name: jenkins
    state: started
  
- name: Wait for Jenkins to start up before proceeding.
  uri:
    url: "http://localhost:8080"
    method: GET
    return_content: "yes"
    timeout: 5
    body_format: raw
    follow_redirects: "no"
    status_code: 200,403
  register: result
  until: (result.status == 403 or result.status == 200) and (result.content.find("Please wait while") == -1)
  retries: 60
  delay: 5
  changed_when: false
  check_mode: false
  
 #Install plugins
- include_tasks: plugins.yaml